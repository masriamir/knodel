[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --failed-first
    --exitfirst

# Markers for organizing tests
markers =
    unit: Unit tests that do not require external dependencies
    integration: Integration tests that test multiple components together
    functional: Functional tests that test the application end-to-end
    slow: Tests that take a long time to run
    network: Tests that require network access
    database: Tests that interact with a database
    api: Tests for API endpoints
    ui: Tests for UI components
    smoke: Basic smoke tests for critical functionality
    concurrent: Tests that involve concurrent execution
    load: Load testing and performance tests

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Log level for captured logs
log_level = DEBUG
log_format = %(asctime)s [%(levelname)s] %(name)s:%(lineno)d - %(funcName)s(): %(message)s
log_date_format = %Y-%m-%d %H:%M:%S

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*datetime.*:DeprecationWarning:botocore.*
    error::UserWarning
    ignore:.*pkg_resources.*:DeprecationWarning

# Minimum pytest version
minversion = 8.0
