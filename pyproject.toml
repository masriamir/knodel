[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "knodel"
dynamic = ["version"]
authors = [
  { name = "Amir Masri", email = "masriamir@users.noreply.github.com" },
]
description = "Python to Tidal Cycles transpiler framework"
keywords = [
  "Tidal",
  "Tidal Cycles",
  "transpiler",
  "strudel",
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = []
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Topic :: Multimedia :: Sound/Audio",
  "Topic :: Multimedia :: Sound/Audio :: Editors",
  "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis",
]
license = "MIT"
license-files = ["LICEN[CS]E*"]

[project.urls]
Homepage = "https://github.com/masriamir/knodel"
Repository = "https://github.com/masriamir/knodel"
Issues = "https://github.com/masriamir/knodel/issues"

[dependency-groups]
dev = [
  "ruff>=0.13.2,<1.0.0",  # Linting and formatting
  "mypy>=1.18.2,<2.0.0",   # Type checking
]

test = [
  "pytest>=8.4.2,<9.0.0",  # Testing framework
  "pytest-cov>=7.0.0,<8.0.0",  # Coverage reporting
  "pytest-watch>=4.2.0,<5.0.0",  # Watch mode for tests
]

[tool.ruff]
line-length = 88
target-version = "py313"
src = ["src"]

[tool.ruff.lint]
select = [
  #"ANN",  # flake8-annotations
  "S",  # flake8-bandit
  "B",  # flake8-bugbear
  "A",  # flake8-builtins
  "COM",  # flake8-commas
  "C4",  # flake8-comprehensions
  #"DTZ",  # flake8-datetimez
  #"INT",  # flake8-gettext
  #"ISC",  # flake8-implicit-str-concat
  #"ICN",  # flake8-import-conventions
  #"LOG",  # flake8-logging
  #"G",  # flake8-logging-format
  "T20",  # flake8-print
  #"PYI",  # flake8-pyi
  #"PT",  # flake8-pytest-style
  #"Q",  # flake8-quotes
  #"RET",  # flake8-return
  #"SLF",  # flake8-self
  #"SIM",  # flake8-simplify
  #"TC",  # flake8-type-checking
  #"ARG",  # flake8-unused-arguments
  "PTH",  # flake8-use-pathlib
  "I",  # isort
  "C90",  # mccabe
  "N",  # pep8-naming
  "E",  # pycodestyle-error
  "W",  # pycodestyle-warning
  #"DOC",  # pydoclint
  #"D",  # pydocstyle
  "F",  # Pyflakes
  "PL",  # Pylint
  "UP",  # pyupgrade
  "RUF"  # Ruff-specific rules
]
ignore = ["E501"]  # Line too long

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",  # assert statements
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.uv]
cache-keys = [
    { file = "pyproject.toml" },
    { git = { commit = true, tags = true } }
]
required-version = ">=0.9.0,<1.0.0"

[tool.uv.pip]
python-version = "3.13"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/knodel/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/knodel"]
